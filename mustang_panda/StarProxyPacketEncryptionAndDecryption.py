'''
Packet encryption and decryption routine used by StarProxy
Two hardcoded 0x100-byte XOR keys are used in a custom algorithm
'''
def encrypt_decrypt(buffer: bytes) -> bytes:
	key1 = [0x24, 0xf0, 0x02, 0xff, 0x46, 0x33, 0x54, 0xe2, 0x80, 0x1a, 0x21, 0xb1, 0x24, 0x25, 0x4c, 0x30, 0x55, 0x21, 0x25, 0x08, 0x55, 0x80, 0xb0, 0x13, 0x08, 0x5a, 0x72, 0xe9, 0xa5, 0x97, 0x24, 0x5c, 0x10, 0x26, 0x52, 0x61, 0x0e, 0xc1, 0x83, 0x0c, 0x24, 0x3c, 0x25, 0x83, 0x0c, 0x0c, 0xb0, 0xc9, 0x26, 0x0c, 0x50, 0xc0, 0xe9, 0x15, 0x14, 0xf5, 0x88, 0x80, 0x43, 0x01, 0x05, 0xdc, 0x91, 0x67, 0x01, 0x41, 0xf0, 0x19, 0x44, 0x10, 0xf8, 0x04, 0x31, 0x82, 0x3e, 0x41, 0x04, 0x50, 0xe8, 0x08, 0x01, 0x44, 0x20, 0x46, 0x00, 0x8b, 0x36, 0x1a, 0x40, 0x12, 0x8a, 0x2a, 0xca, 0xe8, 0xa3, 0x62, 0x60, 0x50, 0xe9, 0xa5, 0x96, 0x66, 0x7a, 0x80, 0x18, 0x23, 0x88, 0x51, 0x69, 0x00, 0x18, 0x30, 0x7a, 0x40, 0xa6, 0xa0, 0x06, 0x90, 0x68, 0xa2, 0x2f, 0xe2, 0x85, 0x82, 0x0d, 0x3d, 0xa4, 0x43, 0x18, 0x0a, 0x6e, 0xc0, 0x0a, 0x8f, 0x0d, 0x43, 0xf4, 0x40, 0x82, 0x63, 0xb8, 0x96, 0xc2, 0x04, 0x64, 0x9b, 0x4c, 0x86, 0x09, 0x2d, 0x5b, 0xb4, 0xa6, 0x04, 0x6c, 0xbf, 0xf9, 0xd6, 0x19, 0x16, 0xd2, 0xd8, 0x46, 0xc6, 0x0e, 0x64, 0xd4, 0x80, 0xec, 0x02, 0xce, 0x39, 0x47, 0xc6, 0xb2, 0xae, 0xad, 0xd0, 0xdb, 0xb5, 0xcf, 0x21, 0x63, 0x5b, 0x0d, 0xb7, 0xb9, 0xa6, 0x9b, 0x6e, 0xcf, 0x41, 0x0b, 0x2d, 0x70, 0xa2, 0x15, 0x67, 0xae, 0x32, 0xc5, 0x25, 0xc7, 0x9c, 0x72, 0xb2, 0x89, 0x4b, 0xda, 0x0e, 0x51, 0x98, 0x61, 0xc1, 0x15, 0x15, 0x28, 0x40, 0xc0, 0x75, 0x82, 0x04, 0x80, 0x83, 0x07, 0x7d, 0x84, 0xe1, 0x5d, 0x1c, 0x7d, 0x34, 0x40, 0xc1, 0x03, 0x49, 0x58, 0xe9, 0x80, 0x0b, 0x8d, 0xe5, 0xf2, 0x09, 0x28, 0x0c, 0x33, 0x8c, 0x1e, 0x7d, 0x10, 0xbb, 0x52, 0xdf, 0xae, 0xfa]

	key2 = [0xa8, 0xc0, 0x0c, 0x57, 0x50, 0xc0, 0x1e, 0xae, 0x43, 0x3a, 0x01, 0x14, 0x41, 0x22, 0x25, 0x58, 0x01, 0x1f, 0x1a, 0x51, 0x02, 0x13, 0x0c, 0x6c, 0x0a, 0x50, 0x38, 0xe1, 0xc6, 0x5e, 0xb1, 0xb0, 0xfa, 0xc0, 0xc7, 0x15, 0x29, 0x3c, 0x85, 0xc4, 0x14, 0x0a, 0x31, 0x2f, 0x60, 0x6c, 0x06, 0x20, 0xd3, 0x82, 0x03, 0x30, 0xd6, 0xa1, 0x8e, 0x0d, 0xa8, 0xa2, 0x9b, 0xe0, 0x10, 0x18, 0x76, 0x26, 0x0c, 0x92, 0x71, 0x0b, 0x19, 0x9d, 0x49, 0x99, 0x0e, 0x91, 0x85, 0x2c, 0x38, 0xd8, 0x10, 0x0b, 0x70, 0x80, 0xc3, 0x00, 0x54, 0xca, 0x52, 0x98, 0xad, 0x74, 0x00, 0x16, 0x1b, 0x47, 0x39, 0x38, 0x81, 0x0e, 0xc1, 0x44, 0xd1, 0x68, 0x48, 0xc3, 0x0b, 0xa1, 0xf8, 0xe1, 0x34, 0x2e, 0xd4, 0x01, 0x20, 0x53, 0x03, 0xc0, 0x14, 0xc4, 0xd0, 0x80, 0xae, 0x79, 0x80, 0x21, 0x62, 0xec, 0x80, 0x07, 0xd0, 0xd8, 0x81, 0xad, 0x35, 0xe0, 0x6a, 0x0c, 0xf1, 0x40, 0x17, 0xec, 0xb0, 0x08, 0x7f, 0x75, 0xa1, 0x08, 0x0c, 0xff, 0xc0, 0x41, 0x1b, 0x10, 0x89, 0x48, 0x43, 0x12, 0xf2, 0xab, 0x82, 0x2a, 0xe4, 0x57, 0xc5, 0x4a, 0xd6, 0x11, 0xc4, 0xc0, 0xac, 0x68, 0x8d, 0x81, 0x06, 0xd4, 0xca, 0xd6, 0xb5, 0x8e, 0x40, 0x03, 0x6f, 0x3d, 0x80, 0x06, 0xc4, 0xc0, 0x4a, 0x0d, 0x70, 0x91, 0x8b, 0x62, 0x98, 0xab, 0x5e, 0xb9, 0xf8, 0xd6, 0xb7, 0x6a, 0xe0, 0xaf, 0x6a, 0x05, 0xec, 0x5f, 0xd7, 0xfa, 0xd7, 0xbb, 0x8e, 0xc0, 0xb0, 0x72, 0x8d, 0xab, 0x06, 0xe4, 0x3a, 0x58, 0xbb, 0x3a, 0x96, 0x8b, 0x8d, 0x8d, 0x6c, 0x5b, 0x27, 0xeb, 0xd6, 0xa5, 0xd9, 0xe5, 0x2e, 0x76, 0xb9, 0x83, 0x08, 0xf8, 0x62, 0x4b, 0xa2, 0xb1, 0x23, 0x97, 0xc8, 0x63, 0x95, 0x10, 0x7a, 0x00, 0x4c, 0xc7, 0x4c, 0x46]

	for i in range(len(buffer)):
		buffer[i] = (buffer[i] ^ key1[i % 0x100]) ^ (key2[(0x100 - i) % 0x100])

	return buffer